<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.czh.shishuo.admin.dao.QuestionMapper" >
  <resultMap id="BaseResultMap" type="com.czh.shishuo.model.Question" >
    <id column="question_id" property="questionId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="question_title" property="questionTitle" jdbcType="VARCHAR" />
    <result column="question_content" property="questionContent" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="click_num" property="clickNum" jdbcType="INTEGER" />
    <result column="question_status" property="questionStatus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    question_id, user_id, question_title, question_content, create_time, update_time, 
    click_num, question_status
  </sql>
  <sql id="Base_Select_QuestionVO">
    distinct q.question_id AS questionId,
    u.user_id AS authorId,
    u.user_nickname AS authorName,
    question_title AS questionTitle,
    question_content AS questionContent,
    click_num AS clickNum,
    ( SELECT Count( * ) FROM question_reply WHERE question_reply.question_id = q.question_id ) AS answerNum,
    (
    SELECT
    group_concat( tag_name )
    FROM
    question_tag
    LEFT JOIN tag ON ( tag.tag_id = question_tag.tag_id )
    WHERE
    question_tag.question_id = q.question_id
    ) AS questionTags,
    (
    SELECT
    tag_img
    FROM
    question_tag
    LEFT JOIN tag ON ( tag.tag_id = question_tag.tag_id )
    WHERE
    question_tag.question_id = q.question_id
    LIMIT 1
    ) AS questionTagImg
  </sql>

  <select id="selectQuestionListByUserCollect" resultType="com.czh.shishuo.admin.vo.QuestionVO" parameterType="java.lang.Integer">
    SELECT
    <include refid="Base_Select_QuestionVO"/>
    FROM
    user_collect_question ucq
    LEFT JOIN question q on (ucq.question_id = q.question_id)
    LEFT JOIN user_info u ON ( q.user_id = u.user_id )
    WHERE  ucq.user_id = #{userId}
  </select>

  <select id="selectQuestionListByReplyUserId" resultType="com.czh.shishuo.admin.vo.QuestionVO" parameterType="java.lang.Integer">
    SELECT
    <include refid="Base_Select_QuestionVO"/>
    FROM
    question_reply qr
    LEFT JOIN question q on (qr.question_id = q.question_id)
    LEFT JOIN user_info u ON ( q.user_id = u.user_id )
    WHERE  qr.user_id = #{userId}
  </select>

  <select id="selectQuestionListByUserId" resultType="com.czh.shishuo.admin.vo.QuestionVO" parameterType="java.lang.Integer">
    SELECT
    <include refid="Base_Select_QuestionVO"/>
    FROM
    question q
    LEFT JOIN user_info u ON ( q.user_id = u.user_id )
    WHERE  q.user_id = #{userId}
  </select>
  <select id="selectNewDataByTag" resultType="com.czh.shishuo.admin.vo.QuestionVO" parameterType="java.lang.Integer">
    SELECT
    <include refid="Base_Select_QuestionVO"/>
    FROM
    question q
    LEFT JOIN user_info u ON ( q.user_id = u.user_id )
    LEFT JOIN question_tag  on (question_tag.question_id = q.question_id)
    WHERE
      #{tagId} IN (question_tag.tag_id)
    ORDER BY q.create_time DESC
  </select>
  <select id="selectNewPage" resultType="com.czh.shishuo.admin.vo.QuestionVO" parameterType="java.lang.Integer">
    SELECT
    <include refid="Base_Select_QuestionVO"/>
    FROM
    question q
    LEFT JOIN user_info u ON ( q.user_id = u.user_id )
    ORDER BY q.create_time DESC
  </select>

  <select id="selectRecommendDataByTag" resultType="com.czh.shishuo.admin.vo.QuestionVO" parameterType="java.lang.Integer">
    SELECT
    <include refid="Base_Select_QuestionVO"/>,
    if(q.create_time > DATE_SUB(now(),interval 1 WEEK),1,2) as hot
    FROM
    question q
    LEFT JOIN user_info u ON ( q.user_id = u.user_id )
    LEFT JOIN question_tag  on (question_tag.question_id = q.question_id)
    WHERE
    #{tagId} IN (question_tag.tag_id)
    ORDER BY hot,(answerNum * 5 + clickNum) DESC
  </select>
  <select id="selectQuestionList" resultType="com.czh.shishuo.admin.vo.QuestionVO">
    SELECT
    q.question_id AS questionId,
    q.question_title AS questionTitle,
    (
    SELECT
    group_concat( tag_name )
    FROM
    question_tag
    LEFT JOIN tag ON ( tag.tag_id = question_tag.tag_id )
    WHERE
    question_tag.question_id = q.question_id
    ) AS questionTags,
    u.user_nickname AS authorName,
    q.create_time AS postTime
    FROM
    question q
    LEFT JOIN user_info u ON ( q.user_id = u.user_id )
    WHERE q.question_status != 0
  </select>

  <select id="selectQuestionRecoveryList" resultType="com.czh.shishuo.admin.vo.QuestionVO">
    SELECT
    q.question_id AS questionId,
    q.question_title AS questionTitle,
    (
    SELECT
    group_concat( tag_name )
    FROM
    question_tag
    LEFT JOIN tag ON ( tag.tag_id = question_tag.tag_id )
    WHERE
    question_tag.question_id = q.question_id
    ) AS questionTags,
    u.user_nickname AS authorName,
    q.create_time AS postTime
    FROM
    question q
    LEFT JOIN user_info u ON ( q.user_id = u.user_id )
    WHERE q.question_status = 0
  </select>
  <select id="selectRecommendPage" resultType="com.czh.shishuo.admin.vo.QuestionVO" parameterType="java.lang.Integer">
    SELECT
    <include refid="Base_Select_QuestionVO"/>,
    if(q.create_time > DATE_SUB(now(),interval 1 WEEK),1,2) as hot
    FROM
    question q
    LEFT JOIN user_info u ON ( q.user_id = u.user_id )
    where q.question_status != 0
    ORDER BY hot,(answerNum * 5 + clickNum) DESC

  </select>

  <select id="selectQuestionVoByQuestionId" resultType="com.czh.shishuo.admin.vo.QuestionVO" parameterType="java.lang.Integer">
    SELECT
    <include refid="Base_Select_QuestionVO"/>,
    u.user_avatar AS authorAvatar
    FROM
    question q
    LEFT JOIN user_info u ON ( q.user_id = u.user_id )
    LEFT JOIN question_reply qr ON ( q.question_id = qr.question_id )
    WHERE q.question_id = #{questionId} and q.question_status != 0
  </select>

  <update id="updataQuestionClickByQuestionId" parameterType="java.lang.Integer">
    UPDATE question
    SET click_num = click_num + #{clickNum}
    WHERE
    question_id = #{questionId}
  </update>
  
  
  <!--                  split line                   -->

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from question
    where question_id = #{questionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from question
    where question_id = #{questionId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.czh.shishuo.model.Question" >
    insert into question (question_id, user_id, question_title, 
      question_content, create_time, update_time, 
      click_num, question_status)
    values (#{questionId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{questionTitle,jdbcType=VARCHAR}, 
      #{questionContent,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{clickNum,jdbcType=INTEGER}, #{questionStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.czh.shishuo.model.Question" >
    insert into question
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="questionId != null" >
        question_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="questionTitle != null" >
        question_title,
      </if>
      <if test="questionContent != null" >
        question_content,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="clickNum != null" >
        click_num,
      </if>
      <if test="questionStatus != null" >
        question_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="questionId != null" >
        #{questionId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="questionTitle != null" >
        #{questionTitle,jdbcType=VARCHAR},
      </if>
      <if test="questionContent != null" >
        #{questionContent,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="clickNum != null" >
        #{clickNum,jdbcType=INTEGER},
      </if>
      <if test="questionStatus != null" >
        #{questionStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.czh.shishuo.model.Question" >
    update question
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="questionTitle != null" >
        question_title = #{questionTitle,jdbcType=VARCHAR},
      </if>
      <if test="questionContent != null" >
        question_content = #{questionContent,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="clickNum != null" >
        click_num = #{clickNum,jdbcType=INTEGER},
      </if>
      <if test="questionStatus != null" >
        question_status = #{questionStatus,jdbcType=INTEGER},
      </if>
    </set>
    where question_id = #{questionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.czh.shishuo.model.Question" >
    update question
    set user_id = #{userId,jdbcType=INTEGER},
      question_title = #{questionTitle,jdbcType=VARCHAR},
      question_content = #{questionContent,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      click_num = #{clickNum,jdbcType=INTEGER},
      question_status = #{questionStatus,jdbcType=INTEGER}
    where question_id = #{questionId,jdbcType=INTEGER}
  </update>
</mapper>